name: "tagged-release"

on:
  push:
    tags:
      - "v*"

permissions: write-all

jobs:
  tagged-release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"

    steps:
      - name: Install Go
        uses: actions/setup-go@v5

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Build
        run: |
          for ga in "linux/amd64" "linux/386" "linux/arm64" "linux/arm" "darwin/amd64" "darwin/arm64"; do
            export GOOS="$${ga%/*}"
            export GOARCH="$${ga#*/}"
            dst="./${archdir}/$${GOOS}-$${GOARCH}"
            mkdir -p "$${dst}"
            echo "=== Building $${GOOS}/$${GOARCH} ==="
            CGO_ENABLED=0 go build -v -ldflags "-X main.BuildVersion=${git_tag}" -o "$${dst}/${bin}"
            [ -s LICENSE ] && install -m 644 LICENSE "$${dst}"
            [ -s README.md ] && install -m 644 README.md "$${dst}"
            [ -s dist/install.sh ] && install -m 755 dist/install.sh "$${dst}"
            [ -s docs/${bin}.1 ] && install -m 644 docs/${bin}.1 "$${dst}"
            tar -C "${archdir}" -zcvf "${archdir}/${bin}-$${GOOS}-$${GOARCH}.tar.gz" "$${dst##*/}"
            rm -rf "$${dst}"
          done

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            arch/*.tar.gz
